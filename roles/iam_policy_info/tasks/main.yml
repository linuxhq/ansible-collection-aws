---
- name: Ensure identity and access management groups are gathered
  tags:
    - iam_policy_info
  ansible.builtin.command:
    cmd: >
      aws iam list-groups
        --query 'Groups[].GroupName'
  register: __iam_policy_info_group_names
  changed_when: false
  check_mode: false

- name: Ensure identity and access management users are gathered
  tags:
    - iam_policy_info
  ansible.builtin.command:
    cmd: >
      aws iam list-users
        --query 'Users[].UserName'
  register: __iam_policy_info_user_names
  changed_when: false
  check_mode: false

- name: Ensure identity and access management return values are formatted
  tags:
    - iam_policy_info
  ansible.builtin.set_fact:
    __iam_policy_info_groups:
      "{{ (__iam_policy_info_group_names.stdout |
          from_json) |
          list |
          d([]) }}"
    __iam_policy_info_users:
      "{{ (__iam_policy_info_user_names.stdout |
          from_json) |
          list |
          d([]) }}"

- name: Ensure identity and access management group inline policies are gathered
  tags:
    - iam_policy_info
  amazon.aws.iam_policy_info:
    iam_name: "{{ _group }}"
    iam_type: group
    validate_certs: true
  register: __iam_policy_info_group_list
  loop: "{{ __iam_policy_info_groups }}"
  loop_control:
    label: "{{ _group | d(none) }}"
    loop_var: _group

- name: Ensure identity and access management user inline policies are gathered
  tags:
    - iam_policy_info
  amazon.aws.iam_policy_info:
    iam_name: "{{ _user }}"
    iam_type: user
    validate_certs: true
  register: __iam_policy_info_user_list
  loop: "{{ __iam_policy_info_users }}"
  loop_control:
    label: "{{ _user | d(none) }}"
    loop_var: _user

- name: Ensure dict of group inline policy information is generated
  tags:
    - iam_policy_info
  ansible.builtin.set_fact:
    _iam_policy_info_group_dict:
      "{{ _iam_policy_info_group_dict |
          d({}) |
          combine({_group.group_name: {'all_policy_names': _group.all_policy_names,
                                       'policies': _group.policies,
                                       'policy_names': _group.policy_names}}) }}"
  loop: "{{ __iam_policy_info_group_list.results }}"
  loop_control:
    label: "{{ _group.group_name | d(none) }}"
    loop_var: _group
  when:
    - _group.group_name is defined

- name: Ensure dict of user inline policy information is generated
  tags:
    - iam_policy_info
  ansible.builtin.set_fact:
    _iam_policy_info_user_dict:
      "{{ _iam_policy_info_user_dict |
          d({}) |
          combine({_user.user_name: {'all_policy_names': _user.all_policy_names,
                                     'policies': _user.policies,
                                     'policy_names': _user.policy_names}}) }}"
  loop: "{{ __iam_policy_info_user_list.results }}"
  loop_control:
    label: "{{ _user.user_name | d(none) }}"
    loop_var: _user
  when:
    - _user.user_name is defined
...
