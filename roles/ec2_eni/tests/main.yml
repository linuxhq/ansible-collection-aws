---
- name: Ensure test play is executed
  hosts: localhost
  connection: local
  vars:
    ec2_ami_info_list:
      - name: 'AlmaLinux OS 9'
        filters:
          owner-alias: aws-marketplace
          product-code: 3kukoxmnoighcsbjd0u4nq9ds
          product-code.type: marketplace
          is-public: true
          virtualization-type: hvm

    ec2_instance_info_filters:
      instance-state-name:
        - running

    ec2_instance_list:
      - name: linuxhq-1
        exact_count: 1
        image_id: "{{ _ec2_ami_info_latest['AlmaLinux OS 9'] }}"
        instance_type: t3.small
        vpc_subnet_id: "{{ _ec2_vpc_subnet_info_dict['linuxhq-pvt-a'].id }}"

      - name: linuxhq-2
        exact_count: 1
        image_id: "{{ _ec2_ami_info_latest['AlmaLinux OS 9'] }}"
        instance_type: t3.small
        vpc_subnet_id: "{{ _ec2_vpc_subnet_info_dict['linuxhq-pvt-a'].id }}"

    ec2_eni_list:
      - subnet_id: "{{ _ec2_vpc_subnet_info_dict['linuxhq-pvt-a'].id }}"
        network_interfaces:
          - name: linuxhq-eni-1
            private_ip_address:
              "{{ ec2_vpc_subnet_list.0.subnets.0.cidr |
                  ansible.utils.ipaddr(10) |
                  ansible.utils.ipaddr('address') }}"

          - name: linuxhq-eni-2
            private_ip_address:
              "{{ ec2_vpc_subnet_list.0.subnets.0.cidr |
                  ansible.utils.ipaddr(11) |
                  ansible.utils.ipaddr('address') }}"

          - name: linuxhq-eni-3
            device_index: 1
            instance_id: "{{ _ec2_instance_info_dict['linuxhq-1'].instance_id }}"
            private_ip_address:
              "{{ ec2_vpc_subnet_list.0.subnets.0.cidr |
                  ansible.utils.ipaddr(20) |
                  ansible.utils.ipaddr('address') }}"
            secondary_private_ip_addresses:
              - "{{ ec2_vpc_subnet_list.0.subnets.0.cidr |
                    ansible.utils.ipaddr(21) |
                    ansible.utils.ipaddr('address') }}"
            security_groups:
              - "{{ _ec2_security_group_info_dict['linuxhq-ssh'].group_id }}"
              - "{{ _ec2_security_group_info_dict['linuxhq-https'].group_id }}"

          - name: linuxhq-eni-4
            device_index: 1
            instance_id: "{{ _ec2_instance_info_dict['linuxhq-2'].instance_id }}"
            private_ip_address:
              "{{ ec2_vpc_subnet_list.0.subnets.0.cidr |
                  ansible.utils.ipaddr(30) |
                  ansible.utils.ipaddr('address') }}"
            secondary_private_ip_addresses:
              - "{{ ec2_vpc_subnet_list.0.subnets.0.cidr |
                    ansible.utils.ipaddr(31) |
                    ansible.utils.ipaddr('address') }}"
            security_groups:
              - "{{ _ec2_security_group_info_dict['linuxhq-ssh'].group_id }}"
              - "{{ _ec2_security_group_info_dict['linuxhq-https'].group_id }}"

    ec2_security_group_list:
      - vpc_id: "{{ _ec2_vpc_net_info_dict['linuxhq'].id }}"
        security_groups:
          - name: linuxhq-ssh
            rules:
              - cidr_ip: "{{ ec2_vpc_net_list[0].cidr_block }}"
                ports:
                  - 22
                proto: tcp
            rules_egress:
              - cidr_ip: 0.0.0.0/0
                proto: -1
          - name: linuxhq-https
            rules:
              - cidr_ip: "{{ ec2_vpc_net_list[0].cidr_block }}"
                ports:
                  - 443
                proto: tcp
            rules_egress:
              - cidr_ip: 0.0.0.0/0
                proto: -1

    ec2_vpc_net_list:
      - name: linuxhq
        cidr_block: 10.0.0.0/16

    ec2_vpc_subnet_list:
      - vpc_id: "{{ _ec2_vpc_net_info_dict['linuxhq'].id }}"
        subnets:
          - name: linuxhq-pvt-a
            az: us-west-2a
            cidr: "{{ '10.0.0.0/16' | ansible.utils.ipsubnet(24, 0) }}"

  roles:
    - linuxhq.aws.ec2_vpc_net
    - linuxhq.aws.ec2_vpc_subnet
    - linuxhq.aws.ec2_instance
    - linuxhq.aws.ec2_security_group
    - linuxhq.aws.ec2_eni
    - linuxhq.aws.ec2_eni_info

  post_tasks:
    - name: Ensure inventory lists are formatted
      ansible.builtin.set_fact:
        ec2_instance_list:
          "{{ ec2_instance_list |
              map('combine', {'state': 'absent'}) }}"
        ec2_eni_list:
          "{{ _ec2_eni_info_list |
              selectattr('tags.Name', 'search', 'linuxhq-eni') |
              json_query('
                [].{
                  subnet_id: subnet_id,
                  network_interfaces: [{
                    name: tags.Name,
                    eni_id: id,
                    instance_id: none,
                    private_ip_address: private_ip_address
                  }]
              }') |
              map(
                'combine',
                {
                  'force_detach': true,
                  'state': 'absent'
                },
              ) }}"
        ec2_security_group_list:
          "{{ ec2_security_group_list |
              map('combine', {'state': 'absent'}) }}"
        ec2_vpc_net_list:
          "{{ ec2_vpc_net_list |
              map('combine', {'state': 'absent'}) }}"
        ec2_vpc_subnet_list:
          "{{ ec2_vpc_subnet_list |
              map('combine', {'state': 'absent'}) }}"

    - name: Ensure roles are included
      ansible.builtin.include_role:
        name: "{{ _role }}"
      loop:
        - linuxhq.aws.ec2_eni
        - linuxhq.aws.ec2_security_group
        - linuxhq.aws.ec2_instance
        - linuxhq.aws.ec2_vpc_subnet
        - linuxhq.aws.ec2_vpc_net
      loop_control:
        label: "{{ _role }}"
        loop_var: _role
...
