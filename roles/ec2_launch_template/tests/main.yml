---
- name: Ensure test play is executed
  hosts: localhost
  connection: local
  vars:
    ec2_ami_info_list:
      - name: 'AlmaLinux OS 8'
        filters:
          owner-alias: aws-marketplace
          product-code: be714bpjscoj5uvqz0of5mscl
          product-code.type: marketplace
          is-public: true
          virtualization-type: hvm
      - name: 'AlmaLinux OS 9'
        filters:
          owner-alias: aws-marketplace
          product-code: 3kukoxmnoighcsbjd0u4nq9ds
          product-code.type: marketplace
          is-public: true
          virtualization-type: hvm

    ec2_launch_template_list:
      - template_name: linuxhq-el8-nano
        image_id: "{{ _ec2_ami_info_latest['AlmaLinux OS 8'] }}"
        instance_type: t3.nano
        security_group_ids:
          - "{{ _ec2_security_group_info_dict['linuxhq-ssh'].group_id }}"
      - template_name: linuxhq-el8-micro
        image_id: "{{ _ec2_ami_info_latest['AlmaLinux OS 8'] }}"
        instance_type: t3.micro
        security_group_ids:
          - "{{ _ec2_security_group_info_dict['linuxhq-ssh'].group_id }}"
      - template_name: linuxhq-el8-small
        image_id: "{{ _ec2_ami_info_latest['AlmaLinux OS 8'] }}"
        instance_type: t3.small
        security_group_ids:
          - "{{ _ec2_security_group_info_dict['linuxhq-ssh'].group_id }}"
      - template_name: linuxhq-el8-medium
        image_id: "{{ _ec2_ami_info_latest['AlmaLinux OS 8'] }}"
        instance_type: t3.medium
        security_group_ids:
          - "{{ _ec2_security_group_info_dict['linuxhq-ssh'].group_id }}"
      - template_name: linuxhq-el8-large
        image_id: "{{ _ec2_ami_info_latest['AlmaLinux OS 8'] }}"
        instance_type: t3.large
        security_group_ids:
          - "{{ _ec2_security_group_info_dict['linuxhq-ssh'].group_id }}"
      - template_name: linuxhq-el8-xlarge
        image_id: "{{ _ec2_ami_info_latest['AlmaLinux OS 8'] }}"
        instance_type: t3.xlarge
        security_group_ids:
          - "{{ _ec2_security_group_info_dict['linuxhq-ssh'].group_id }}"
      - template_name: linuxhq-el9-nano
        image_id: "{{ _ec2_ami_info_latest['AlmaLinux OS 9'] }}"
        instance_type: t3.nano
        security_group_ids:
          - "{{ _ec2_security_group_info_dict['linuxhq-ssh'].group_id }}"
      - template_name: linuxhq-el9-micro
        image_id: "{{ _ec2_ami_info_latest['AlmaLinux OS 9'] }}"
        instance_type: t3.micro
        security_group_ids:
          - "{{ _ec2_security_group_info_dict['linuxhq-ssh'].group_id }}"
      - template_name: linuxhq-el9-small
        image_id: "{{ _ec2_ami_info_latest['AlmaLinux OS 9'] }}"
        instance_type: t3.small
        security_group_ids:
          - "{{ _ec2_security_group_info_dict['linuxhq-ssh'].group_id }}"
      - template_name: linuxhq-el9-medium
        image_id: "{{ _ec2_ami_info_latest['AlmaLinux OS 9'] }}"
        instance_type: t3.medium
        security_group_ids:
          - "{{ _ec2_security_group_info_dict['linuxhq-ssh'].group_id }}"
      - template_name: linuxhq-el9-large
        image_id: "{{ _ec2_ami_info_latest['AlmaLinux OS 9'] }}"
        instance_type: t3.large
        security_group_ids:
          - "{{ _ec2_security_group_info_dict['linuxhq-ssh'].group_id }}"
      - template_name: linuxhq-el9-xlarge
        image_id: "{{ _ec2_ami_info_latest['AlmaLinux OS 9'] }}"
        instance_type: t3.xlarge
        security_group_ids:
          - "{{ _ec2_security_group_info_dict['linuxhq-ssh'].group_id }}"

    ec2_security_group_list:
      - vpc_id: "{{ _ec2_vpc_net_info_dict['linuxhq'].id }}"
        security_groups:
          - name: linuxhq-ssh
            rules:
              - cidr_ip: "{{ ec2_vpc_net_list[0].cidr_block }}"
                ports:
                  - 22
                proto: tcp
            rules_egress:
              - cidr_ip: 0.0.0.0/0
                proto: -1

    ec2_vpc_net_list:
      - name: linuxhq
        cidr_block: 10.0.0.0/16

  roles:
    - linuxhq.aws.ec2_vpc_net
    - linuxhq.aws.ec2_security_group
    - linuxhq.aws.ec2_launch_template

  post_tasks:
    - name: Ensure inventory lists are formatted
      ansible.builtin.set_fact:
        ec2_vpc_net_list:
          "{{ ec2_vpc_net_list |
              map('combine', {'state': 'absent'}) }}"
        ec2_security_group_list:
          "{{ ec2_security_group_list |
              map('combine', {'state': 'absent'}) }}"
        ec2_launch_template_list:
          "{{ ec2_launch_template_list |
              map('combine', {'state': 'absent'}) }}"

    - name: Ensure roles are included
      ansible.builtin.include_role:
        name: "{{ _role }}"
      loop:
        - linuxhq.aws.ec2_launch_template
        - linuxhq.aws.ec2_security_group
        - linuxhq.aws.ec2_vpc_net
      loop_control:
        label: "{{ _role }}"
        loop_var: _role
...
