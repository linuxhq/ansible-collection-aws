---
- name: Ensure test play is executed
  hosts: localhost
  connection: local
  vars:
    ec2_vpc_net_list:
      - name: linuxhq
        cidr_block: 10.0.0.0/16

    ec2_security_group_list:
      - vpc_id: "{{ _ec2_vpc_net_info_dict['linuxhq'].id }}"
        security_groups:
          - name: linuxhq-ftp
            rules:
              - cidr_ip: "{{ ec2_vpc_net_list[0].cidr_block }}"
                ports:
                  - 21
                proto: tcp
            rules_egress:
              - cidr_ip: 0.0.0.0/0
                proto: -1
          - name: linuxhq-ssh
            rules:
              - cidr_ip: "{{ ec2_vpc_net_list[0].cidr_block }}"
                ports:
                  - 22
                proto: tcp
            rules_egress:
              - cidr_ip: 0.0.0.0/0
                proto: -1
          - name: linuxhq-telnet
            rules:
              - cidr_ip: "{{ ec2_vpc_net_list[0].cidr_block }}"
                ports:
                  - 23
                proto: tcp
            rules_egress:
              - cidr_ip: 0.0.0.0/0
                proto: -1
          - name: linuxhq-smtp
            rules:
              - cidr_ip: "{{ ec2_vpc_net_list[0].cidr_block }}"
                ports:
                  - 25
                proto: tcp
            rules_egress:
              - cidr_ip: 0.0.0.0/0
                proto: -1
          - name: linuxhq-domain
            rules:
              - cidr_ip: "{{ ec2_vpc_net_list[0].cidr_block }}"
                ports:
                  - 53
                proto: tcp
            rules_egress:
              - cidr_ip: 0.0.0.0/0
                proto: -1
          - name: linuxhq-http
            rules:
              - cidr_ip: "{{ ec2_vpc_net_list[0].cidr_block }}"
                ports:
                  - 80
                proto: tcp
            rules_egress:
              - cidr_ip: 0.0.0.0/0
                proto: -1
          - name: linuxhq-pop3
            rules:
              - cidr_ip: "{{ ec2_vpc_net_list[0].cidr_block }}"
                ports:
                  - 110
                proto: tcp
            rules_egress:
              - cidr_ip: 0.0.0.0/0
                proto: -1
          - name: linuxhq-imap
            rules:
              - cidr_ip: "{{ ec2_vpc_net_list[0].cidr_block }}"
                ports:
                  - 143
                proto: tcp
            rules_egress:
              - cidr_ip: 0.0.0.0/0
                proto: -1
          - name: linuxhq-ldap
            rules:
              - cidr_ip: "{{ ec2_vpc_net_list[0].cidr_block }}"
                ports:
                  - 389
                proto: tcp
            rules_egress:
              - cidr_ip: 0.0.0.0/0
                proto: -1
          - name: linuxhq-https
            rules:
              - cidr_ip: "{{ ec2_vpc_net_list[0].cidr_block }}"
                ports:
                  - 443
                proto: tcp
            rules_egress:
              - cidr_ip: 0.0.0.0/0
                proto: -1
          - name: linuxhq-ircd
            rules:
              - cidr_ip: "{{ ec2_vpc_net_list[0].cidr_block }}"
                ports:
                  - 6667
                proto: tcp
            rules_egress:
              - cidr_ip: 0.0.0.0/0
                proto: -1
          - name: linuxhq-ircs
            rules:
              - cidr_ip: "{{ ec2_vpc_net_list[0].cidr_block }}"
                ports:
                  - 6697
                proto: tcp
            rules_egress:
              - cidr_ip: 0.0.0.0/0
                proto: -1

  roles:
    - linuxhq.aws.ec2_vpc_net
    - linuxhq.aws.ec2_security_group

  post_tasks:
    - name: Ensure inventory lists are formatted
      ansible.builtin.set_fact:
        ec2_vpc_net_list:
          "{{ ec2_vpc_net_list |
              map('combine', {'state': 'absent'}) }}"
        ec2_security_group_list:
          "{{ ec2_security_group_list |
              map('combine', {'state': 'absent'}) }}"

    - name: Ensure roles are included
      ansible.builtin.include_role:
        name: "{{ _role }}"
      loop:
        - linuxhq.aws.ec2_security_group
        - linuxhq.aws.ec2_vpc_net
      loop_control:
        label: "{{ _role }}"
        loop_var: _role
...
