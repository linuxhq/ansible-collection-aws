---
- name: Ensure list of route53 resolver rules is gathered
  tags:
    - route53_resolver_rule
  ansible.builtin.command:
    cmd: >
      aws route53resolver list-resolver-rules
        --query 'ResolverRules[].{key: Name, value: Id}'
  register: __route53_resolver_rule_query
  changed_when: false
  check_mode: false

- name: Ensure dictionary of route53 resolver rule name and ids is generated
  tags:
    - route53_resolver_rule
  ansible.builtin.set_fact:
    __route53_resolver_rule_id:
      "{{ (__route53_resolver_rule_query.stdout |
          from_json) |
          items2dict }}"

- name: Ensure route53 resolver rules are present
  tags:
    - route53_resolver_rule
  ansible.builtin.command:
    cmd: >
      aws route53resolver create-resolver-rule
        --creator-request-id "{{ _rule.name }}"
        --domain-name "{{ _rule.domain_name }}"
        --name "{{ _rule.name }}"
        --resolver-endpoint-id "{{ _rule.resolver_endpoint_id }}"
        --rule-type "{{ _rule.rule_type | upper }}"
        --target-ips '{{ _rule.target_ips | to_json }}'
  register: __route53_resolver_rule_create
  loop: "{{ route53_resolver_rule_list }}"
  loop_control:
    label: "{{ _rule.name | d(none) }}"
    loop_var: _rule
  when:
    - _rule.name is defined
    - _rule.name not in __route53_resolver_rule_id.keys()
    - _rule.domain_name is defined
    - _rule.resolver_endpoint_id is defined
    - _rule.rule_type is defined
    - _rule.target_ips is defined
    - _rule.target_ips | length > 0
  changed_when: true

- name: Ensure route53 resolver rules are updated
  tags:
    - route53_resolver_rule
  ansible.builtin.command:
    cmd: >
      aws route53resolver update-resolver-rule
        --config '{{ _route53_resolver_rule_config | to_json }}'
        --resolver-rule-id "{{ __route53_resolver_rule_id[_rule.name] }}"
  loop: "{{ route53_resolver_rule_list }}"
  loop_control:
    label: "{{ _rule.name | d(none) }}"
    loop_var: _rule
  vars:
    _route53_resolver_rule_config:
      Name: "{{ _rule.name }}"
      ResolverEndpointId: "{{ _rule.resolver_endpoint_id }}"
      TargetIps: "{{ _rule.target_ips }}"
  when:
    - _rule.name is defined
    - _rule.name in __route53_resolver_rule_id.keys()
    - _rule.resolver_endpoint_id is defined
    - _rule.target_ips is defined
    - _rule.target_ips | length > 0
    - __route53_resolver_rule_id[_rule.name] is defined
  changed_when: true
...
