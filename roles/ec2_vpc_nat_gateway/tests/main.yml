---
- name: Ensure ec2 vpc nat gateway role is tested
  hosts: localhost
  connection: local
  vars:
    ec2_vpc_net_list:
      - name: linuxhq-test
        cidr_block: 10.0.0.0/16

    ec2_vpc_igw_list:
      - name: linuxhq-test
        vpc_id: "{{ _ec2_vpc_net_info_dict['linuxhq-test'].id }}"

    ec2_vpc_subnet_list:
      - vpc_id: "{{ _ec2_vpc_net_info_dict['linuxhq-test'].id }}"
        subnets:
          - name: linuxhq-test-pub-a
            az: us-west-2a
            cidr: "{{ '10.0.0.0/16' | ansible.utils.ipsubnet(24, 0) }}"
          - name: linuxhq-test-pub-b
            az: us-west-2b
            cidr: "{{ '10.0.0.0/16' | ansible.utils.ipsubnet(24, 1) }}"
          - name: linuxhq-test-pub-c
            az: us-west-2c
            cidr: "{{ '10.0.0.0/16' | ansible.utils.ipsubnet(24, 2) }}"
          - name: linuxhq-test-pvt-a
            az: us-west-2a
            cidr: "{{ '10.0.0.0/16' | ansible.utils.ipsubnet(24, 3) }}"
          - name: linuxhq-test-pvt-b
            az: us-west-2b
            cidr: "{{ '10.0.0.0/16' | ansible.utils.ipsubnet(24, 4) }}"
          - name: linuxhq-test-pvt-c
            az: us-west-2c
            cidr: "{{ '10.0.0.0/16' | ansible.utils.ipsubnet(24, 5) }}"

    ec2_vpc_nat_gateway_list:
        - name: linuxhq-test-pub-a
          if_exist_do_not_create: true
          subnet_id: "{{ _ec2_vpc_subnet_info_dict['linuxhq-test-pub-a'].id }}"
          wait: true
        - name: linuxhq-test-pub-b
          if_exist_do_not_create: true
          subnet_id: "{{ _ec2_vpc_subnet_info_dict['linuxhq-test-pub-b'].id }}"
          wait: true
        - name: linuxhq-test-pub-c
          if_exist_do_not_create: true
          subnet_id: "{{ _ec2_vpc_subnet_info_dict['linuxhq-test-pub-c'].id }}"
          wait: true

  roles:
    - linuxhq.aws.ec2_vpc_net
    - linuxhq.aws.ec2_vpc_igw
    - linuxhq.aws.ec2_vpc_subnet
    - linuxhq.aws.ec2_vpc_nat_gateway

  post_tasks:
    - name: Ensure ec2 vpc nat gateway info role is imported
      ansible.builtin.import_role:
        name: linuxhq.aws.ec2_vpc_nat_gateway_info
      vars:
        ec2_vpc_nat_gateway_info_filters:
          state:
            - available

    - name: Ensure ec2 vpc lists are formatted
      ansible.builtin.set_fact:
        ec2_vpc_net_list:
          "{{ ec2_vpc_net_list |
              map('combine', {'state': 'absent'}) }}"
        ec2_vpc_igw_list:
          "{{ ec2_vpc_igw_list |
              map('combine', {'state': 'absent'}) }}"
        ec2_vpc_subnet_list:
          "{{ ec2_vpc_subnet_list |
              map('combine', {'state': 'absent'}) }}"
        ec2_vpc_nat_gateway_list:
          "{{ _ec2_vpc_nat_gateway_info_list |
              selectattr('tags.Name', 'search', 'linuxhq-test-pub') |
              json_query('[].{name: tags.Name,
                              nat_gateway_id: nat_gateway_id}') |
              map('combine', {'release_eip': true,
                              'state': 'absent',
                              'wait': true}) }}"

    - name: Ensure ec2 vpc nat gateway role is imported
      ansible.builtin.import_role:
        name: linuxhq.aws.ec2_vpc_nat_gateway

    - name: Ensure ec2 vpc subnet role is imported
      ansible.builtin.import_role:
        name: linuxhq.aws.ec2_vpc_subnet

    - name: Ensure ec2 vpc igw role is imported
      ansible.builtin.import_role:
        name: linuxhq.aws.ec2_vpc_igw

    - name: Ensure ec2 vpc net role is imported
      ansible.builtin.import_role:
        name: linuxhq.aws.ec2_vpc_net
...
