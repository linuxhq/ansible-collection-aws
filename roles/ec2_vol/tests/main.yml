---
- name: Ensure test play is executed
  hosts: localhost
  connection: local
  vars:
    ec2_ami_info_list:
      - name: 'AlmaLinux OS 9'
        filters:
          owner-alias: aws-marketplace
          product-code: 3kukoxmnoighcsbjd0u4nq9ds
          product-code.type: marketplace
          is-public: true
          virtualization-type: hvm

    ec2_instance_info_filters:
      instance-state-name:
        - running

    ec2_instance_list:
      - name: linuxhq-1
        exact_count: 1
        image_id: "{{ _ec2_ami_info_latest['AlmaLinux OS 9'] }}"
        instance_type: t3.small
        vpc_subnet_id: "{{ _ec2_vpc_subnet_info_dict['linuxhq-pvt-a'].id }}"

      - name: linuxhq-2
        exact_count: 1
        image_id: "{{ _ec2_ami_info_latest['AlmaLinux OS 9'] }}"
        instance_type: t3.small
        vpc_subnet_id: "{{ _ec2_vpc_subnet_info_dict['linuxhq-pvt-a'].id }}"

    ec2_vol_list:
      - instance: "{{ _ec2_instance_info_dict['linuxhq-1'].instance_id }}"
        volumes:
          - name: linuxhq-vol-a-01
            device_name: sdf
            volume_size: "{{ 10 | random(start=1) }}"
          - name: linuxhq-vol-a-02
            device_name: sdg
            volume_size: "{{ 10 | random(start=1) }}"
          - name: linuxhq-vol-a-03
            device_name: sdh
            volume_size: "{{ 10 | random(start=1) }}"
          - name: linuxhq-vol-a-04
            device_name: sdi
            volume_size: "{{ 10 | random(start=1) }}"
          - name: linuxhq-vol-a-05
            device_name: sdj
            volume_size: "{{ 10 | random(start=1) }}"
          - name: linuxhq-vol-a-06
            device_name: sdk
            volume_size: "{{ 10 | random(start=1) }}"

      - instance: "{{ _ec2_instance_info_dict['linuxhq-2'].instance_id }}"
        volumes:
          - name: linuxhq-vol-b-01
            device_name: sdf
            volume_size: "{{ 10 | random(start=1) }}"
          - name: linuxhq-vol-b-02
            device_name: sdg
            volume_size: "{{ 10 | random(start=1) }}"
          - name: linuxhq-vol-b-03
            device_name: sdh
            volume_size: "{{ 10 | random(start=1) }}"
          - name: linuxhq-vol-b-04
            device_name: sdi
            volume_size: "{{ 10 | random(start=1) }}"
          - name: linuxhq-vol-b-05
            device_name: sdj
            volume_size: "{{ 10 | random(start=1) }}"
          - name: linuxhq-vol-b-06
            device_name: sdk
            volume_size: "{{ 10 | random(start=1) }}"

    ec2_vpc_net_list:
      - name: linuxhq
        cidr_block: 10.0.0.0/16

    ec2_vpc_subnet_list:
      - vpc_id: "{{ _ec2_vpc_net_info_dict['linuxhq'].id }}"
        subnets:
          - name: linuxhq-pvt-a
            az: us-west-2a
            cidr: "{{ '10.0.0.0/16' | ansible.utils.ipsubnet(24, 0) }}"

  roles:
    - linuxhq.aws.ec2_vpc_net
    - linuxhq.aws.ec2_vpc_subnet
    - linuxhq.aws.ec2_instance
    - linuxhq.aws.ec2_vol
    - linuxhq.aws.ec2_vol_info

  post_tasks:
    - name: Ensure inventory lists are formatted
      ansible.builtin.set_fact:
        ec2_instance_list:
          "{{ ec2_instance_list |
              map('combine', {'state': 'absent'}) }}"
        ec2_vol_list:
          "{{ _ec2_vol_info_list |
              selectattr('tags.Name', 'search', 'linuxhq-vol') |
              json_query('
                [].{
                  instance: attachment_set.instance_id,
                  volumes: [{
                    name: tags.Name,
                    id: id,
                    volume_size: size
                  }]
              }') |
              map(
                'combine',
                {'state': 'absent'},
              ) }}"
        ec2_vpc_net_list:
          "{{ ec2_vpc_net_list |
              map('combine', {'state': 'absent'}) }}"
        ec2_vpc_subnet_list:
          "{{ ec2_vpc_subnet_list |
              map('combine', {'state': 'absent'}) }}"

    - name: Ensure roles are included
      ansible.builtin.include_role:
        name: "{{ _role }}"
      loop:
        - linuxhq.aws.ec2_vol
        - linuxhq.aws.ec2_instance
        - linuxhq.aws.ec2_vpc_subnet
        - linuxhq.aws.ec2_vpc_net
      loop_control:
        label: "{{ _role }}"
        loop_var: _role
...
